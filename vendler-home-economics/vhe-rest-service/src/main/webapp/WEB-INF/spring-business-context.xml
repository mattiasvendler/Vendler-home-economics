<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:jee="http://www.springframework.org/schema/jee"
   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

   <!-- Scan the the domain package for Spring repositories and services -->
   <context:component-scan base-package="se.vendler" />
   <!-- Use JTA transactions with the container-deployed EntityManager -->
   <tx:jta-transaction-manager />

   <!-- Use declarative transactions on the services -->
   <tx:annotation-driven />

   <!--
      Initialize the database. Used for a proof-of-concept only.
      In a production application,  the tables and data are already
      existing, so you should disable this definition.
   -->

    <bean id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="mysql://127.0.0.1:5520"/>
        <property name="password" value="msandbox"/>
        <property name="username" value="msandbox"/>
    </bean>
</beans>